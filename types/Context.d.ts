import { Dict } from '@yogurtcat/lib';
import { element, codes, parser, sifter, creator, paramode, importFile } from './util';
export default class Context {
    readonly syms: Dict<string, string>;
    readonly vars: Dict<string, (string | element)[]>;
    readonly parsers: Dict<string, parser>;
    readonly sifters: Dict<string, sifter[]>;
    readonly creators: Dict<string, creator>;
    readonly paramode: paramode;
    importFile: importFile;
    constructor();
    parseComment(text: string): Promise<codes[]>;
    parse(text: string): Promise<codes[]>;
    parseVars(element: element): element;
    parseElems(element: element): element;
    parseChildrenVars(element: element): element;
    parseChildrenContinue(element: element): element;
    parseChildrenJoin(element: element, sep?: string): element;
    parseChildrenSplit(element: element): element;
    parseChildrenDelEmpty(element: element): element;
    parseChildrenLines(element: element): element;
    parseChildrenNewLines(element: element): element;
    parseChildrenJoinLines(element: element): element;
    parseChildrenDelStrs(element: element): element;
    parseChildrenDelElems(element: element): element;
    parseChildrenClosure(element: element): element;
    parseChildrenCopyStatus(element: element): element;
    parseChildrenParsers(element: element): Promise<codes[]>;
    parseParsers(element: element): Promise<codes[]>;
    parseSifters(element: element): Promise<codes[]>;
    createElement(sym: string, status: any, attrs: any[], children: any[]): codes[];
    parseCreate(element: element): Promise<codes[]>;
}
